basePath: /api/v1
definitions:
  handler.CreateRequest:
    properties:
      priority:
        type: integer
      task:
        type: string
    required:
    - task
    type: object
  handler.Error:
    properties:
      code:
        type: string
      message:
        type: string
    type: object
  handler.ResponseData:
    properties:
      data:
        description: Data is the response data.
    type: object
  handler.ResponseError:
    properties:
      errors:
        description: Errors is the response errors.
        items:
          $ref: '#/definitions/handler.Error'
        type: array
    type: object
  handler.UpdateRequestBody:
    properties:
      status:
        $ref: '#/definitions/model.Status'
      task:
        type: string
    type: object
  model.Status:
    enum:
    - created
    - processing
    - done
    type: string
    x-enum-varnames:
    - Created
    - Processing
    - Done
  model.Todo:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      priority:
        type: integer
      status:
        $ref: '#/definitions/model.Status'
      task:
        type: string
      updatedAt:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a server for fullstack-examination-2024.
  license:
    name: Apache 2.0
  title: fullstack-examination-2024 API
  version: 0.0.1
paths:
  /api/v1/todos:
    get:
      consumes:
      - application/json
      parameters:
      - description: Task to filter todos (supports partial matches)
        in: query
        name: task
        type: string
      - description: 'Status to filter todos (must be one of: ''created'', ''processing'',
          or ''done'')'
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved todos
          schema:
            items:
              allOf:
              - $ref: '#/definitions/handler.ResponseData'
              - properties:
                  Data:
                    $ref: '#/definitions/model.Todo'
                type: object
            type: array
        "400":
          description: Invalid query parameters
          schema:
            $ref: '#/definitions/handler.ResponseError'
        "500":
          description: Failed to fetch records from the database
          schema:
            $ref: '#/definitions/handler.ResponseError'
      summary: Find todos by optional task and status
      tags:
      - todos
    post:
      consumes:
      - application/json
      description: Creates a new todo item with the specified task and optional priority
      parameters:
      - description: Todo creation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.CreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created a new todo item
          schema:
            allOf:
            - $ref: '#/definitions/handler.ResponseData'
            - properties:
                Data:
                  $ref: '#/definitions/model.Todo'
              type: object
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/handler.ResponseError'
        "500":
          description: Internal server error while creating the todo item
          schema:
            $ref: '#/definitions/handler.ResponseError'
      summary: Create a new todo
      tags:
      - todos
  /api/v1/todos/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a todo item with the specified ID
      parameters:
      - description: ID of the todo to be deleted
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Successfully deleted the todo item
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/handler.ResponseError'
        "404":
          description: Todo item not found
          schema:
            $ref: '#/definitions/handler.ResponseError'
        "500":
          description: Internal server error while deleting the todo item
          schema:
            $ref: '#/definitions/handler.ResponseError'
      summary: Delete a todo
      tags:
      - todos
    get:
      consumes:
      - application/json
      description: Retrieves a todo item with the specified ID
      parameters:
      - description: ID of the todo to be retrieved
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved the todo item
          schema:
            allOf:
            - $ref: '#/definitions/handler.ResponseData'
            - properties:
                Data:
                  $ref: '#/definitions/model.Todo'
              type: object
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/handler.ResponseError'
        "404":
          description: Todo item not found
          schema:
            $ref: '#/definitions/handler.ResponseError'
        "500":
          description: Internal server error while retrieving the todo item
          schema:
            $ref: '#/definitions/handler.ResponseError'
      summary: Find a todo
      tags:
      - todos
    put:
      consumes:
      - application/json
      description: Updates the details of a todo item with the specified ID
      parameters:
      - description: ID of the todo to be updated
        in: path
        name: id
        required: true
        type: integer
      - description: Todo update request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.UpdateRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated the todo item
          schema:
            allOf:
            - $ref: '#/definitions/handler.ResponseData'
            - properties:
                Data:
                  $ref: '#/definitions/model.Todo'
              type: object
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/handler.ResponseError'
        "404":
          description: Todo item not found
          schema:
            $ref: '#/definitions/handler.ResponseError'
        "500":
          description: Internal server error while updating the todo item
          schema:
            $ref: '#/definitions/handler.ResponseError'
      summary: Update a todo
      tags:
      - todos
  /healthz:
    get:
      description: Check the health status of the service
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/handler.ResponseData'
            - properties:
                Data:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ResponseError'
      summary: Health Check
      tags:
      - health
schemes:
- http
swagger: "2.0"
